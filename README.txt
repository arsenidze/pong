1. показать знание языка C++ (не С)

2. показать знание ООП и умение его использовать
При разработке даной игры были выделены след сущности:
IGameObject - представляет каждый объект в игре. (От него наследуются Paddle, Ball, Wall)
Game - отвечает за игровой процесс
Graphics - рендеринг и загрузка текстур
InputHandler - позволяет узнать о происходящих событиях
Каждая сущность выделялась в класс(и физически в отдельную папку)
3. показать умение использовать STL
Из контейнеров использовались словари, вектора(можно увидеть в main.cpp)
4. аккуратно оформленный структурированный код

5. показать умение подключать и использовать внешние библиотеки
Используемые библиотеки находятся в папке lib(это SDL2 и SDL2_image)
6. показать знание архитектуры игровых движков

7. показать использование паттернов проектирования (не только Singleton).
Класс Graphics - Singelton, также при реализации этого класса использовалась идиома pimpl, для того чтобы скрыть реализацию завязанную на SDL2(была задумка так писать чтобы потом графическую библиотеку можно было бы поменять).
Класс Game - Dependecy Injection. Не привязан к каким либо конкретным объектам, а буде выполнять игровой процесс с тем чем был проинициализировали.

Скорее из игровых паттернов - GameLoop, UpdateMethod(https://gameprogrammingpatterns.com/contents.html)
8. код должен компилироваться либо под Win32, либо под Ubuntu 16.04 x64 или 18.04 x64, чтобы можно было проверить, а также запускаться без дополнительных телодвижений (F5 или же непосредственно запуск из папки с бинарником)
Запуск игры происходит через Pong.exe из папки Debug